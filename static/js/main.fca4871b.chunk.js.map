{"version":3,"sources":["components/header/header.js","components/searching/searching.js","utils.js","components/sorting/sorting.js","components/home/home.js","components/footer/footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","activeClassName","Searching","style","justifyContent","alignItems","fontSize","wait","ms","Promise","resolve","reject","setTimeout","console","log","Sorting","useState","selectedAlgo","setSelectedAlgo","undefined","noOfElements","setNoOfElements","elements","setElements","isSorting","setIsSorting","speed","setSpeed","sortingOptions","loop","autoplay","animationData","sortingData","rendererSettings","preserveAspectRatio","selectionSort","a","i","length","positionBeingSorted","iMin","j","minElement","comparingElement","number","temp","sorted","mergeSortArray","mergeSort","array","left","right","mid","Math","floor","merge","visualiseMergeSort","p","q","r","tempArr","Array","push","action","placeholder","onChange","e","value","options","label","isDisabled","size","arr","random","generateArray","onClick","parseInt","JSON","parse","stringify","class","width","height","title","isClickToPauseDisabled","map","el","idx","Home","flowChartOptions","flowChartData","Footer","githubOptions","githubData","linkedInOptions","linkedinData","href","rel","target","App","defaultOptions","isAnimationDone","setAnimationDone","basename","path","exact","component","isStopped","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fca4871b.chunk.js","sourcesContent":["import './header.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => {\n    return (\n        <header className=\"header\">\n            <h1><NavLink to=\"/\"><span>Algo</span>-Visualizer</NavLink></h1>\n            <nav>\n                <ul>\n                    <li><NavLink activeClassName=\"active-nav-link\" to=\"/sorting\">Sorting</NavLink></li>\n                    <li><NavLink activeClassName=\"active-nav-link\" to=\"/searching\">Searching</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )}\n\nexport default Header;","\n\nconst Searching = () => {\n    // let array = [90, 20, 50, 45, 38, 98, 44, 77, 34, 15]\n    return (\n        <div className=\"algos animate__animated animate__fadeIn\">\n            <div className=\"algo-menu\">\n                <h4>Searching Algorithms</h4>\n            </div>\n            <div className=\"algo-visualize\" style={{justifyContent: 'center', alignItems: 'center', fontSize: '4rem'}}>\n                Coming Soon\n                {/* <div className=\"element-container\">\n                    {array.map((el, idx) => \n                        <div className=\"bars\" key={idx} style={{height: `${el}%` }}>\n                            {el}\n                        </div>\n                    )}\n                </div> */}\n            </div>\n        </div>\n    )\n}\n\nexport default Searching;","export const wait = (ms) => {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n        console.log(\"Done waiting\");\n        resolve(ms)\n        }, ms )\n    })\n}   ","import { wait } from '../../utils';\nimport { useState } from 'react';\nimport Select from 'react-select';\nimport Lottie from 'react-lottie';\nimport * as sortingData from '../../assets/animations/sorting.json';\n\nconst Sorting = () => {\n    const [selectedAlgo, setSelectedAlgo] = useState(0);\n    const [noOfElements, setNoOfElements] = useState(undefined);\n    const [elements, setElements] = useState([]);\n    const [isSorting, setIsSorting] = useState(false);\n    const [speed, setSpeed] = useState(1000)\n\n    const sortingOptions = {\n        loop: true,\n        autoplay: true, \n        animationData: sortingData.default,\n        rendererSettings: {\n            preserveAspectRatio: 'xMidYMid slice'\n        }\n    };\n    const options = [\n        { value: 1, label: 'Selection Sort',  isDisabled: false },\n        { value: 2, label: 'Merge Sort', isDisabled: false },\n        { value: 3, label: 'Quick Sort',  isDisabled: true },\n        { value: 4, label: 'Heap Sort',  isDisabled: true },\n        { value: 5, label: 'Bubble Sort',  isDisabled: true },\n    ];\n    const options2 = [\n        { value: 10, label: '10 Elements' },\n        { value: 50, label: '50 Elements' },\n        { value: 100, label: '100 Elements' },\n    ];\n\n    const generateArray = (size) => {\n        let arr = [];\n        if(size === 100) \n            setSpeed(0.01);\n        else if(size === 50) \n            setSpeed(20);\n        else {\n            setSpeed(100);\n        }\n\n        for(let i=0; i<size; i++) {\n            arr.push({\n                number: Math.floor(Math.random() * (95)) + 5,\n                positionBeingSorted: false,\n                sorted: false,\n                minElement: false,\n                comparingElement: false\n            });\n        }\n        setElements(arr);\n        console.log({arr})\n    }\n\n    const startSort = () => {\n        setIsSorting(true);\n        console.log('selectedAlgo', selectedAlgo)\n        switch(parseInt(selectedAlgo)) {\n            case 1:\n                selectionSort();\n                break;\n            case 2:\n                // let array = [...elements]\n                mergeSort([...JSON.parse(JSON.stringify(elements))], 0, elements.length-1);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const selectionSort = async () => {\n        for(let i=0; i<elements.length; i++) {\n            elements[i].positionBeingSorted = true;\n            setElements([...elements]);\n    \n            let iMin = i;\n            for(let j=i+1; j<elements.length; j++) {\n                elements[iMin].minElement = true;\n                elements[j].comparingElement = true;\n                setElements([...elements]);\n                console.log(speed, typeof(speed))\n                await wait(speed);\n                elements[iMin].minElement = false;\n                setElements([...elements])\n                if(elements[iMin].number > elements[j].number) {\n                    iMin = j;\n                }\n                elements[j].comparingElement = false;\n                setElements([...elements])\n            }\n            if(iMin !== i) {\n                let temp = elements[i].number;\n                elements[i].number = elements[iMin].number;\n                elements[iMin].number = temp;\n            }\n            elements[i].sorted = true;\n            setElements([...elements]);\n        }\n        setIsSorting(false)\n    }\n\n    let mergeSortArray = [];\n    const mergeSort = async (array, left, right) => {\n        if(left < right) {\n            let mid = Math.floor((left+right)/2);\n            mergeSort(array, left, mid);\n            mergeSort(array, mid+1, right);\n            merge(array, left, mid, right);\n        } else if(left>=right && right === array.length-1) {\n            visualiseMergeSort();\n        } \n    }\n    const merge = async (array, left, mid, right) => {\n        let p = left;\n        let q = mid + 1;\n        let r = left;\n        let tempArr = new Array(array.length);\n        \n        while( p <= mid && q <= right) {\n            mergeSortArray.push({\n                action: 'compare',\n                elements: [p,q]\n            })\n            if(array[p].number > array[q].number) {\n                tempArr[r] = array[q].number;\n                mergeSortArray.push({\n                    action: 'overwrite',\n                    elements: [r, array[q].number]\n                })\n                q++;\n            } else {\n                tempArr[r] = array[p].number;\n                mergeSortArray.push({\n                    action: 'overwrite',\n                    elements: [r, array[p].number]\n                })\n                p++;\n            }\n            r++;\n        }\n\n        while(p <= mid) {\n            tempArr[r] = array[p].number;\n            mergeSortArray.push({\n                action: 'overwrite',\n                elements: [r, array[p].number]\n            })\n            p++;\n            r++;\n        }\n        while(q <= right) {\n            tempArr[r] = array[q].number;\n            mergeSortArray.push({\n                action: 'overwrite',\n                elements: [r, array[q].number]\n            })\n            q++;\n            r++;\n        }\n        for(let i=left; i<=right; i++) {\n            array[i].number = tempArr[i];\n        }\n    }\n    const visualiseMergeSort = async () => {\n        for(let i=0; i<mergeSortArray.length; i++) {\n            if(mergeSortArray[i].action === \"compare\") {\n                elements[mergeSortArray[i].elements[0]].minElement = true;\n                elements[mergeSortArray[i].elements[1]].comparingElement = true;\n                setElements([...elements])\n                await wait(speed);\n                elements[mergeSortArray[i].elements[0]].minElement = false;\n                elements[mergeSortArray[i].elements[1]].comparingElement = false;\n                setElements([...elements])\n            } else {\n                elements[mergeSortArray[i].elements[0]].number = mergeSortArray[i].elements[1];\n                setElements([...elements])\n            }\n        }\n        for(let i=0; i<elements.length; i++) {\n            elements[i].sorted = true;\n        }\n        setElements([...elements]);\n        setIsSorting(false);\n    }\n\n\n\n    return (\n        <div className=\"algos animate__animated animate__fadeIn\">\n            <div className=\"algo-menu\">\n                <h4>Sorting Algorithms</h4>\n                <div>\n\n                { !selectedAlgo &&\n                    <div className=\"instructions animate__animated animate__fadeIn\">\n                        Please Select Algorithm\n                    </div>\n                }\n                { selectedAlgo > 0 && !noOfElements && \n                    <div className=\"instructions animate__animated animate__fadeIn\">\n                        Please Select No of Elements\n                    </div>\n                }\n                </div>\n                <div className=\"algo-optioins\">\n                        <Select\n                            className={`algo-dropdown ${isSorting ? 'disabled': ''}`}\n                            placeholder=\"Select Algorithm\"\n                            onChange={(e)=> {\n                                setSelectedAlgo(e.value)\n                            }}\n                            options={options}\n                        />\n                    { selectedAlgo > 0 &&\n                        <Select\n                            className={`elements-dropdown ${isSorting ? 'disabled': ''}`}\n                            placeholder=\"Select Elements\"\n                            onChange={(e)=> {\n                                setNoOfElements(e.value)\n                                generateArray(e.value)\n                            }}\n                            options={options2}\n                        />\n                    }\n                    { elements.length > 0 &&\n                        <button className={isSorting ? \"disabled\" : null} onClick={startSort}>Sort</button>\n                    }\n                </div>\n            </div>\n            { elements.length === 0 ? (\n                <div className=\"algo-visualize home\">\n                    <div className=\"home-definition definition\">\n                        In computer science, a sorting algorithm is an algorithm that puts elements of a list in a certain order. The most frequently used orders are numerical order and lexicographical order. Efficient sorting is important for optimizing the efficiency of other algorithms that require input data to be in sorted lists.\n        \n                        <br />\n                        <br />\n                        <span class=\"definition-source\">Source: Wikipedia</span>\n                    </div>\n                    <div className=\"home-animation\">\n                        <div style={{width: '50%'}}>\n                            <Lottie \n                                options={sortingOptions}\n                                height={'100%'}\n                                width={'100%'}\n                                title=\"Sorting\"\n                                isClickToPauseDisabled={true}\n                            />\n                        </div>\n                    </div>\n                </div>\n            \n            ) : (\n                <div className=\"algo-visualize\">\n                    <div className=\"color-indicators\">\n                        <div>\n                            <span className=\"sorted\"></span>Sorted\n                        </div>\n                        <div>\n                            <span className=\"unsorted\"></span>Un Sorted\n                        </div>\n                        <div>\n                            <span className=\"min-element\"></span>Minimun Element\n                        </div>\n                        { selectedAlgo === 1 &&\n                            <div>\n                                <span className=\"position-being-sorted\"></span>Position Being Sorted\n                            </div>\n                        }                        \n                        <div>\n                            <span className=\"comparing-element\"></span>Comparing Element\n                        </div>\n                    </div>\n                    <div className=\"element-container animate__animated animate__zoomIn\">\n                        {elements.map((el, idx) => \n                            <div className={`bars bar-${idx}\n                                            ${el.class} ${el.positionBeingSorted ? 'position-being-sorted' : ''}\n                                            ${el.sorted ? 'sorted' : ''}\n                                            ${el.minElement ? 'min-element' : ''}\n                                            ${el.comparingElement ? 'comparing-element' : ''}\n                                            `} \n                                            key={idx} style={{height: `${el.number}%`, width: `calc(100% / ${elements.length})` }}>\n                                {/* {el} */}\n                            </div>\n                        )}\n                    </div>\n                \n                </div>\n            )\n            }\n\n        </div>\n    )\n}\n\nexport default Sorting;\n","import './home.css';\nimport Lottie from 'react-lottie';\nimport * as flowChartData from '../../assets/animations/flowchart.json';\n\nconst Home = () => {\n\n    const flowChartOptions = {\n        loop: true,\n        autoplay: true, \n        animationData: flowChartData.default,\n        rendererSettings: {\n            preserveAspectRatio: 'xMidYMid slice'\n        }\n    };\n\n    return (\n        <div className=\"animate__animated animate__fadeIn home\">\n            <div className=\"home-definition definition\">\n                In mathematics and computer science, an algorithm is a finite sequence of well-defined, \n                computer-implementable instructions, typically to solve a class of problems or to perform\n                 a computation. Algorithms are always unambiguous and are used as specifications for\n                  performing calculations, data processing, automated reasoning, and other tasks.\n\n                <br />\n                <br />\n                <span class=\"definition-source\">Source: Wikipedia</span>\n            </div>\n            <div className=\"home-animation\">\n                <div style={{width: '50%'}}>\n                    <Lottie \n                        options={flowChartOptions}\n                        height={'100%'}\n                        width={'100%'}\n                        title=\"Flow Chart\"\n                        isClickToPauseDisabled={true}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react'\nimport './footer.css';\nimport * as githubData from '../../assets/animations/github.json';\nimport * as linkedinData from '../../assets/animations/linkedin.json';\nimport Lottie from 'react-lottie';\n\nconst Footer = () => {\n\n    const githubOptions = {\n        loop: true,\n        autoplay: true, \n        animationData: githubData.default,\n        rendererSettings: {\n            preserveAspectRatio: 'xMidYMid slice'\n        }\n    };\n      \n    const linkedInOptions = {\n        loop: true,\n        autoplay: true, \n        animationData: linkedinData.default,\n        rendererSettings: {\n            preserveAspectRatio: 'xMidYMid slice'\n        }\n    };\n    return (\n        <div className=\"footer\">\n\n            <span>By Abdul Raheem</span>\n            {/* Add Social Links below like Github, LinkedIn, etc*/}\n\n            <button>\n                <a href=\"https://github.com/mdabdulraheem\" rel=\"noreferrer\" target=\"_blank\">\n                    <Lottie \n                        options={githubOptions}\n                        height={'100%'}\n                        width={'100%'}\n                        title=\"Github\"\n                        isClickToPauseDisabled={true}\n                    />\n                </a>\n            </button>\n            <button>\n                <a href=\"https://www.linkedin.com/in/mohammed-abdul-raheem/\" rel=\"noreferrer\" target=\"_blank\">\n                    <Lottie \n                        options={linkedInOptions}\n                        height={'100%'}\n                        width={'100%'}\n                        title=\"LinkedIn\"\n                        isClickToPauseDisabled={true}\n                    />\n                </a>\n            </button>\n        </div>\n    )\n}\n\nexport default Footer\n","import './App.css';\nimport Header from './components/header/header';\nimport { Route, HashRouter } from 'react-router-dom';\nimport Searching from './components/searching/searching';\nimport Sorting from './components/sorting/sorting';\nimport Home from './components/home/home';\nimport Footer from './components/footer/footer';\nimport Lottie from 'react-lottie';\nimport * as animationData from './assets/animations/tea-loading.json'\nimport { useState } from 'react';\nimport 'animate.css';\n\nfunction App() {\n  const defaultOptions = {\n    loop: true,\n    autoplay: true, \n    animationData: animationData.default,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  };\n\n  const [isAnimationDone, setAnimationDone] = useState(false)\n\n  setTimeout(()=>{\n    setAnimationDone(true)\n  }, 5000)\n\n  return (\n    <HashRouter basename='/'>\n      {\n        !isAnimationDone \n        ?\n          <div className=\"App animate__animated animate__zoomIn\">\n            <div className=\"loading-animation\">\n              <Lottie \n                options={defaultOptions}\n                height={'100vh'}\n                width={'100vw'}\n                isStopped={isAnimationDone}\n              />\n            </div>\n          </div>\n        :\n          <div className=\"App animate__animated animate__fadeIn\">\n          {/* Header Component */}\n            <Header />\n            <div className=\"main-section\">\n              <Route path=\"/\" exact component={Home}/>\n              <Route path=\"/searching\" component={Searching}/>\n              <Route path=\"/sorting\" component={Sorting}/>\n            </div>\n            <Footer />\n          </div>\n      }\n    </HashRouter>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}